#include <cmath>
#include <cstdio>
#include <vector>
#include <iostream>
#include <algorithm>
using namespace std;
bool solve(string pat,string s, int n,int m){

    if(n==0&&m==0) {

      return true;

    }

    else if(n==0&&m!=0) return false;

    else if(n>0&&m<=0) {

      for(int l=n-1; l>=0;l--){

        if(pat[l]!='*') return false;

      }

       return true;

    }

     

    if(pat[n-1]==s[m-1]||pat[n-1]=='?'){

      // cout<<"eq ";

      return solve(pat,s,n-1,m-1);

    }

    else if(pat[n-1]=='*'){

      // cout<<"ne ";

      return solve(pat,s,n-1,m)||solve(pat,s,n,m-1);

    }

    // else return solve(pat,s,n,m-1);

    return false;

  }

   

 

  int wildCard(string pat,string str)

  {

    if(pat.back()=='*'){

      reverse(pat.begin(),pat.end());

      reverse(str.begin(),str.end());

    }

    return solve(pat,str,pat.length(),str.length());

  }

int main() {
  /* Enter your code here. Read input from STDIN. Print output to STDOUT */  
  int a;
  cin>>a;
  while(a--){
    string s,r;
    cin>>s>>r;
    if(wildCard(s,r)){
      cout<<"True"<<endl;
    }
    else{
      cout<<"False"<<endl;
    }
  }
   
  return 0;
}
